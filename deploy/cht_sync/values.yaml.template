
postgres:
  enabled: true  # if true a postgres service will be created in this cluster
  user: ""
  password: ""
  db: ""
  schema: "v1"
  table: "couchdb"  
  host: "postgres" # if postgres is outside the cluster
  port: 5432 # if postgres is outside the cluster

cht_pipeline_branch_url: "https://github.com/medic/cht-pipeline.git#main"
dbt_thread_count: 1

# values shared by all couchdb instances
# can be omitted if couchdb instances do not share any values
couchdb:
  user: ""
  dbs: "medic" # space separated list of databases you want to sync e.g "medic medic-sentinel"
  port: "5984"
  secure: "true" # "true" if SSL is required

# values for each couchdb instance
# host and password are required
# other values can be omitted if they are common to all couchdb instances and specified above
couchdbs:
  - host: "host1" # required for all couchdb instances
    password: "" # required for all couchdb instances
  - host: "host2"
    password: ""
  - host: "host3"
    password: ""
    user: "user2" # required if different than above
    dbs: "medic medic_sentinel" # required if different than above
    port: "5984" # required if different than above
    secure: "true" # required if different than above

# if using the medic EKS cluster these values will create an ingress
# using a shared ALB
# if not using medic EKS cluser, omit
#medic_ingress:
#  enabled: true
#  annotations:
#    groupname: "dev-cht-alb"
#    tags: "Environment=dev,Team=QA"
#    certificate: ""
#  host: ""
#  hosted_zone_id: ""
#  load_balancer: ""

# if set to true, will create a sql exporter sidecar
# and service "metrics"
# to export metrics from postgres via http (prometheus format)
#metrics_exporter:
#  enabled: true
